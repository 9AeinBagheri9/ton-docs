[
  {
    "name": "NEWDICT",
    "alias_of": "NULL",
    "tlb": "#6D",
    "doc_category": "dict_create",
    "doc_opcode": "6D",
    "doc_fift": "NEWDICT",
    "doc_stack": "- D",
    "doc_gas": 18,
    "doc_description": "Returns a new empty dictionary.\nIt is an alternative mnemonics for `PUSHNULL`."
  },
  {
    "name": "DICTEMPTY",
    "alias_of": "ISNULL",
    "tlb": "#6E",
    "doc_category": "dict_create",
    "doc_opcode": "6E",
    "doc_fift": "DICTEMPTY",
    "doc_stack": "D - ?",
    "doc_gas": 18,
    "doc_description": "Checks whether dictionary `D` is empty, and returns `-1` or `0` accordingly.\nIt is an alternative mnemonics for `ISNULL`."
  },
  {
    "name": "STDICTS",
    "alias_of": "STSLICE",
    "tlb": "#CE",
    "doc_category": "dict_serial",
    "doc_opcode": "CE",
    "doc_fift": "STDICTS",
    "doc_stack": "s b - b'",
    "doc_gas": 18,
    "doc_description": "Stores a _Slice_-represented dictionary `s` into _Builder_ `b`.\nIt is actually a synonym for `STSLICE`."
  },
  {
    "name": "STDICT",
    "alias_of": "",
    "tlb": "#F400",
    "doc_category": "dict_serial",
    "doc_opcode": "F400",
    "doc_fift": "STDICT\nSTOPTREF",
    "doc_stack": "D b - b'",
    "doc_gas": 26,
    "doc_description": "Stores dictionary `D` into _Builder_ `b`, returing the resulting _Builder_ `b'`.\nIn other words, if `D` is a cell, performs `STONE` and `STREF`; if `D` is _Null_, performs `NIP` and `STZERO`; otherwise throws a type checking exception."
  },
  {
    "name": "SKIPDICT",
    "alias_of": "",
    "tlb": "#F401",
    "doc_category": "dict_serial",
    "doc_opcode": "F401",
    "doc_fift": "SKIPDICT\nSKIPOPTREF",
    "doc_stack": "s - s'",
    "doc_gas": 26,
    "doc_description": "Equivalent to `LDDICT` `NIP`."
  },
  {
    "name": "LDDICTS",
    "alias_of": "",
    "tlb": "#F402",
    "doc_category": "dict_serial",
    "doc_opcode": "F402",
    "doc_fift": "LDDICTS",
    "doc_stack": "s - s' s''",
    "doc_gas": 26,
    "doc_description": "Loads (parses) a (_Slice_-represented) dictionary `s'` from _Slice_ `s`, and returns the remainder of `s` as `s''`.\nThis is a â€œsplit function'' for all `HashmapE(n,X)` dictionary types."
  },
  {
    "name": "PLDDICTS",
    "alias_of": "",
    "tlb": "#F403",
    "doc_category": "dict_serial",
    "doc_opcode": "F403",
    "doc_fift": "PLDDICTS",
    "doc_stack": "s - s'",
    "doc_gas": 26,
    "doc_description": "Preloads a (_Slice_-represented) dictionary `s'` from _Slice_ `s`.\nApproximately equivalent to `LDDICTS` `DROP`."
  },
  {
    "name": "LDDICT",
    "alias_of": "",
    "tlb": "#F404",
    "doc_category": "dict_serial",
    "doc_opcode": "F404",
    "doc_fift": "LDDICT\nLDOPTREF",
    "doc_stack": "s - D s'",
    "doc_gas": 26,
    "doc_description": "Loads (parses) a dictionary `D` from _Slice_ `s`, and returns the remainder of `s` as `s'`. May be applied to dictionaries or to values of arbitrary `(^Y)?` types."
  },
  {
    "name": "PLDDICT",
    "alias_of": "",
    "tlb": "#F405",
    "doc_category": "dict_serial",
    "doc_opcode": "F405",
    "doc_fift": "PLDDICT\nPLDOPTREF",
    "doc_stack": "s - D",
    "doc_gas": 26,
    "doc_description": "Preloads a dictionary `D` from _Slice_ `s`.\nApproximately equivalent to `LDDICT` `DROP`."
  },
  {
    "name": "LDDICTQ",
    "alias_of": "",
    "tlb": "#F406",
    "doc_category": "dict_serial",
    "doc_opcode": "F406",
    "doc_fift": "LDDICTQ",
    "doc_stack": "s - D s' -1 or s 0",
    "doc_gas": 26,
    "doc_description": "A quiet version of `LDDICT`."
  },
  {
    "name": "PLDDICTQ",
    "alias_of": "",
    "tlb": "#F407",
    "doc_category": "dict_serial",
    "doc_opcode": "F407",
    "doc_fift": "PLDDICTQ",
    "doc_stack": "s - D -1 or 0",
    "doc_gas": 26,
    "doc_description": "A quiet version of `PLDDICT`."
  },
  {
    "name": "DICTGET",
    "alias_of": "",
    "tlb": "#F40A",
    "doc_category": "dict_get",
    "doc_opcode": "F40A",
    "doc_fift": "DICTGET",
    "doc_stack": "k D n - x -1 or 0",
    "doc_gas": "",
    "doc_description": "Looks up key `k` (represented by a _Slice_, the first `0 <= n <= 1023` data bits of which are used as a key) in dictionary `D` of type `HashmapE(n,X)` with `n`-bit keys.\nOn success, returns the value found as a _Slice_ `x`."
  },
  {
    "name": "DICTGETREF",
    "alias_of": "",
    "tlb": "#F40B",
    "doc_category": "dict_get",
    "doc_opcode": "F40B",
    "doc_fift": "DICTGETREF",
    "doc_stack": "k D n - c -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGET`, but with a `LDREF` `ENDS` applied to `x` on success.\nThis operation is useful for dictionaries of type `HashmapE(n,^Y)`."
  },
  {
    "name": "DICTIGET",
    "alias_of": "",
    "tlb": "#F40C",
    "doc_category": "dict_get",
    "doc_opcode": "F40C",
    "doc_fift": "DICTIGET",
    "doc_stack": "i D n - x -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGET`, but with a signed (big-endian) `n`-bit _Integer_ `i` as a key. If `i` does not fit into `n` bits, returns `0`. If `i` is a `NaN`, throws an integer overflow exception."
  },
  {
    "name": "DICTIGETREF",
    "alias_of": "",
    "tlb": "#F40D",
    "doc_category": "dict_get",
    "doc_opcode": "F40D",
    "doc_fift": "DICTIGETREF",
    "doc_stack": "i D n - c -1 or 0",
    "doc_gas": "",
    "doc_description": "Combines `DICTIGET` with `DICTGETREF`: it uses signed `n`-bit _Integer_ `i` as a key and returns a _Cell_ instead of a _Slice_ on success."
  },
  {
    "name": "DICTUGET",
    "alias_of": "",
    "tlb": "#F40E",
    "doc_category": "dict_get",
    "doc_opcode": "F40E",
    "doc_fift": "DICTUGET",
    "doc_stack": "i D n - x -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIGET`, but with _unsigned_ (big-endian) `n`-bit _Integer_ `i` used as a key."
  },
  {
    "name": "DICTUGETREF",
    "alias_of": "",
    "tlb": "#F40F",
    "doc_category": "dict_get",
    "doc_opcode": "F40F",
    "doc_fift": "DICTUGETREF",
    "doc_stack": "i D n - c -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIGETREF`, but with an unsigned `n`-bit _Integer_ key `i`."
  },
  {
    "name": "DICTSET",
    "alias_of": "",
    "tlb": "#F412",
    "doc_category": "dict_set",
    "doc_opcode": "F412",
    "doc_fift": "DICTSET",
    "doc_stack": "x k D n - D'",
    "doc_gas": "",
    "doc_description": "Sets the value associated with `n`-bit key `k` (represented by a _Slice_ as in `DICTGET`) in dictionary `D` (also represented by a _Slice_) to value `x` (again a _Slice_), and returns the resulting dictionary as `D'`."
  },
  {
    "name": "DICTSETREF",
    "alias_of": "",
    "tlb": "#F413",
    "doc_category": "dict_set",
    "doc_opcode": "F413",
    "doc_fift": "DICTSETREF",
    "doc_stack": "c k D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `DICTSET`, but with the value set to a reference to _Cell_ `c`."
  },
  {
    "name": "DICTISET",
    "alias_of": "",
    "tlb": "#F414",
    "doc_category": "dict_set",
    "doc_opcode": "F414",
    "doc_fift": "DICTISET",
    "doc_stack": "x i D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `DICTSET`, but with the key represented by a (big-endian) signed `n`-bit integer `i`. If `i` does not fit into `n` bits, a range check exception is generated."
  },
  {
    "name": "DICTISETREF",
    "alias_of": "",
    "tlb": "#F415",
    "doc_category": "dict_set",
    "doc_opcode": "F415",
    "doc_fift": "DICTISETREF",
    "doc_stack": "c i D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `DICTSETREF`, but with the key a signed `n`-bit integer as in `DICTISET`."
  },
  {
    "name": "DICTUSET",
    "alias_of": "",
    "tlb": "#F416",
    "doc_category": "dict_set",
    "doc_opcode": "F416",
    "doc_fift": "DICTUSET",
    "doc_stack": "x i D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `DICTISET`, but with `i` an _unsigned_ `n`-bit integer."
  },
  {
    "name": "DICTUSETREF",
    "alias_of": "",
    "tlb": "#F417",
    "doc_category": "dict_set",
    "doc_opcode": "F417",
    "doc_fift": "DICTUSETREF",
    "doc_stack": "c i D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `DICTISETREF`, but with `i` unsigned."
  },
  {
    "name": "DICTSETGET",
    "alias_of": "",
    "tlb": "#F41A",
    "doc_category": "dict_set",
    "doc_opcode": "F41A",
    "doc_fift": "DICTSETGET",
    "doc_stack": "x k D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": "Combines `DICTSET` with `DICTGET`: it sets the value corresponding to key `k` to `x`, but also returns the old value `y` associated with the key in question, if present."
  },
  {
    "name": "DICTSETGETREF",
    "alias_of": "",
    "tlb": "#F41B",
    "doc_category": "dict_set",
    "doc_opcode": "F41B",
    "doc_fift": "DICTSETGETREF",
    "doc_stack": "c k D n - D' c' -1 or D' 0",
    "doc_gas": "",
    "doc_description": "Combines `DICTSETREF` with `DICTGETREF` similarly to `DICTSETGET`."
  },
  {
    "name": "DICTISETGET",
    "alias_of": "",
    "tlb": "#F41C",
    "doc_category": "dict_set",
    "doc_opcode": "F41C",
    "doc_fift": "DICTISETGET",
    "doc_stack": "x i D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": "`DICTISETGET`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTISETGETREF",
    "alias_of": "",
    "tlb": "#F41D",
    "doc_category": "dict_set",
    "doc_opcode": "F41D",
    "doc_fift": "DICTISETGETREF",
    "doc_stack": "c i D n - D' c' -1 or D' 0",
    "doc_gas": "",
    "doc_description": "`DICTISETGETREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUSETGET",
    "alias_of": "",
    "tlb": "#F41E",
    "doc_category": "dict_set",
    "doc_opcode": "F41E",
    "doc_fift": "DICTUSETGET",
    "doc_stack": "x i D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": "`DICTISETGET`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUSETGETREF",
    "alias_of": "",
    "tlb": "#F41F",
    "doc_category": "dict_set",
    "doc_opcode": "F41F",
    "doc_fift": "DICTUSETGETREF",
    "doc_stack": "c i D n - D' c' -1 or D' 0",
    "doc_gas": "",
    "doc_description": "`DICTISETGETREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTREPLACE",
    "alias_of": "",
    "tlb": "#F422",
    "doc_category": "dict_set",
    "doc_opcode": "F422",
    "doc_fift": "DICTREPLACE",
    "doc_stack": "x k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "A _Replace_ operation, which is similar to `DICTSET`, but sets the value of key `k` in dictionary `D` to `x` only if the key `k` was already present in `D`."
  },
  {
    "name": "DICTREPLACEREF",
    "alias_of": "",
    "tlb": "#F423",
    "doc_category": "dict_set",
    "doc_opcode": "F423",
    "doc_fift": "DICTREPLACEREF",
    "doc_stack": "c k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "A _Replace_ counterpart of `DICTSETREF`."
  },
  {
    "name": "DICTIREPLACE",
    "alias_of": "",
    "tlb": "#F424",
    "doc_category": "dict_set",
    "doc_opcode": "F424",
    "doc_fift": "DICTIREPLACE",
    "doc_stack": "x i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACE`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTIREPLACEREF",
    "alias_of": "",
    "tlb": "#F425",
    "doc_category": "dict_set",
    "doc_opcode": "F425",
    "doc_fift": "DICTIREPLACEREF",
    "doc_stack": "c i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUREPLACE",
    "alias_of": "",
    "tlb": "#F426",
    "doc_category": "dict_set",
    "doc_opcode": "F426",
    "doc_fift": "DICTUREPLACE",
    "doc_stack": "x i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACE`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUREPLACEREF",
    "alias_of": "",
    "tlb": "#F427",
    "doc_category": "dict_set",
    "doc_opcode": "F427",
    "doc_fift": "DICTUREPLACEREF",
    "doc_stack": "c i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTREPLACEGET",
    "alias_of": "",
    "tlb": "#F42A",
    "doc_category": "dict_set",
    "doc_opcode": "F42A",
    "doc_fift": "DICTREPLACEGET",
    "doc_stack": "x k D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": "A _Replace_ counterpart of `DICTSETGET`: on success, also returns the old value associated with the key in question."
  },
  {
    "name": "DICTREPLACEGETREF",
    "alias_of": "",
    "tlb": "#F42B",
    "doc_category": "dict_set",
    "doc_opcode": "F42B",
    "doc_fift": "DICTREPLACEGETREF",
    "doc_stack": "c k D n - D' c' -1 or D 0",
    "doc_gas": "",
    "doc_description": "A _Replace_ counterpart of `DICTSETGETREF`."
  },
  {
    "name": "DICTIREPLACEGET",
    "alias_of": "",
    "tlb": "#F42C",
    "doc_category": "dict_set",
    "doc_opcode": "F42C",
    "doc_fift": "DICTIREPLACEGET",
    "doc_stack": "x i D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEGET`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTIREPLACEGETREF",
    "alias_of": "",
    "tlb": "#F42D",
    "doc_category": "dict_set",
    "doc_opcode": "F42D",
    "doc_fift": "DICTIREPLACEGETREF",
    "doc_stack": "c i D n - D' c' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEGETREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUREPLACEGET",
    "alias_of": "",
    "tlb": "#F42E",
    "doc_category": "dict_set",
    "doc_opcode": "F42E",
    "doc_fift": "DICTUREPLACEGET",
    "doc_stack": "x i D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEGET`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUREPLACEGETREF",
    "alias_of": "",
    "tlb": "#F42F",
    "doc_category": "dict_set",
    "doc_opcode": "F42F",
    "doc_fift": "DICTUREPLACEGETREF",
    "doc_stack": "c i D n - D' c' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTREPLACEGETREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTADD",
    "alias_of": "",
    "tlb": "#F432",
    "doc_category": "dict_set",
    "doc_opcode": "F432",
    "doc_fift": "DICTADD",
    "doc_stack": "x k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "An _Add_ counterpart of `DICTSET`: sets the value associated with key `k` in dictionary `D` to `x`, but only if it is not already present in `D`."
  },
  {
    "name": "DICTADDREF",
    "alias_of": "",
    "tlb": "#F433",
    "doc_category": "dict_set",
    "doc_opcode": "F433",
    "doc_fift": "DICTADDREF",
    "doc_stack": "c k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "An _Add_ counterpart of `DICTSETREF`."
  },
  {
    "name": "DICTIADD",
    "alias_of": "",
    "tlb": "#F434",
    "doc_category": "dict_set",
    "doc_opcode": "F434",
    "doc_fift": "DICTIADD",
    "doc_stack": "x i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTADD`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTIADDREF",
    "alias_of": "",
    "tlb": "#F435",
    "doc_category": "dict_set",
    "doc_opcode": "F435",
    "doc_fift": "DICTIADDREF",
    "doc_stack": "c i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTADDREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUADD",
    "alias_of": "",
    "tlb": "#F436",
    "doc_category": "dict_set",
    "doc_opcode": "F436",
    "doc_fift": "DICTUADD",
    "doc_stack": "x i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTADD`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUADDREF",
    "alias_of": "",
    "tlb": "#F437",
    "doc_category": "dict_set",
    "doc_opcode": "F437",
    "doc_fift": "DICTUADDREF",
    "doc_stack": "c i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTADDREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTADDGET",
    "alias_of": "",
    "tlb": "#F43A",
    "doc_category": "dict_set",
    "doc_opcode": "F43A",
    "doc_fift": "DICTADDGET",
    "doc_stack": "x k D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": "An _Add_ counterpart of `DICTSETGET`: sets the value associated with key `k` in dictionary `D` to `x`, but only if key `k` is not already present in `D`. Otherwise, just returns the old value `y` without changing the dictionary."
  },
  {
    "name": "DICTADDGETREF",
    "alias_of": "",
    "tlb": "#F43B",
    "doc_category": "dict_set",
    "doc_opcode": "F43B",
    "doc_fift": "DICTADDGETREF",
    "doc_stack": "c k D n - D' -1 or D c' 0",
    "doc_gas": "",
    "doc_description": "An _Add_ counterpart of `DICTSETGETREF`."
  },
  {
    "name": "DICTIADDGET",
    "alias_of": "",
    "tlb": "#F43C",
    "doc_category": "dict_set",
    "doc_opcode": "F43C",
    "doc_fift": "DICTIADDGET",
    "doc_stack": "x i D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": "`DICTADDGET`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTIADDGETREF",
    "alias_of": "",
    "tlb": "#F43D",
    "doc_category": "dict_set",
    "doc_opcode": "F43D",
    "doc_fift": "DICTIADDGETREF",
    "doc_stack": "c i D n - D' -1 or D c' 0",
    "doc_gas": "",
    "doc_description": "`DICTADDGETREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUADDGET",
    "alias_of": "",
    "tlb": "#F43E",
    "doc_category": "dict_set",
    "doc_opcode": "F43E",
    "doc_fift": "DICTUADDGET",
    "doc_stack": "x i D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": "`DICTADDGET`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUADDGETREF",
    "alias_of": "",
    "tlb": "#F43F",
    "doc_category": "dict_set",
    "doc_opcode": "F43F",
    "doc_fift": "DICTUADDGETREF",
    "doc_stack": "c i D n - D' -1 or D c' 0",
    "doc_gas": "",
    "doc_description": "`DICTADDGETREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTSETB",
    "alias_of": "",
    "tlb": "#F441",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F441",
    "doc_fift": "DICTSETB",
    "doc_stack": "b k D n - D'",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTISETB",
    "alias_of": "",
    "tlb": "#F442",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F442",
    "doc_fift": "DICTISETB",
    "doc_stack": "b i D n - D'",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUSETB",
    "alias_of": "",
    "tlb": "#F443",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F443",
    "doc_fift": "DICTUSETB",
    "doc_stack": "b i D n - D'",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTSETGETB",
    "alias_of": "",
    "tlb": "#F445",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F445",
    "doc_fift": "DICTSETGETB",
    "doc_stack": "b k D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTISETGETB",
    "alias_of": "",
    "tlb": "#F446",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F446",
    "doc_fift": "DICTISETGETB",
    "doc_stack": "b i D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUSETGETB",
    "alias_of": "",
    "tlb": "#F447",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F447",
    "doc_fift": "DICTUSETGETB",
    "doc_stack": "b i D n - D' y -1 or D' 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTREPLACEB",
    "alias_of": "",
    "tlb": "#F449",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F449",
    "doc_fift": "DICTREPLACEB",
    "doc_stack": "b k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTIREPLACEB",
    "alias_of": "",
    "tlb": "#F44A",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F44A",
    "doc_fift": "DICTIREPLACEB",
    "doc_stack": "b i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUREPLACEB",
    "alias_of": "",
    "tlb": "#F44B",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F44B",
    "doc_fift": "DICTUREPLACEB",
    "doc_stack": "b i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTREPLACEGETB",
    "alias_of": "",
    "tlb": "#F44D",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F44D",
    "doc_fift": "DICTREPLACEGETB",
    "doc_stack": "b k D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTIREPLACEGETB",
    "alias_of": "",
    "tlb": "#F44E",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F44E",
    "doc_fift": "DICTIREPLACEGETB",
    "doc_stack": "b i D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUREPLACEGETB",
    "alias_of": "",
    "tlb": "#F44F",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F44F",
    "doc_fift": "DICTUREPLACEGETB",
    "doc_stack": "b i D n - D' y -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTADDB",
    "alias_of": "",
    "tlb": "#F451",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F451",
    "doc_fift": "DICTADDB",
    "doc_stack": "b k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTIADDB",
    "alias_of": "",
    "tlb": "#F452",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F452",
    "doc_fift": "DICTIADDB",
    "doc_stack": "b i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUADDB",
    "alias_of": "",
    "tlb": "#F453",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F453",
    "doc_fift": "DICTUADDB",
    "doc_stack": "b i D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTADDGETB",
    "alias_of": "",
    "tlb": "#F455",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F455",
    "doc_fift": "DICTADDGETB",
    "doc_stack": "b k D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTIADDGETB",
    "alias_of": "",
    "tlb": "#F456",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F456",
    "doc_fift": "DICTIADDGETB",
    "doc_stack": "b i D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTUADDGETB",
    "alias_of": "",
    "tlb": "#F457",
    "doc_category": "dict_set_builder",
    "doc_opcode": "F457",
    "doc_fift": "DICTUADDGETB",
    "doc_stack": "b i D n - D' -1 or D y 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTDEL",
    "alias_of": "",
    "tlb": "#F459",
    "doc_category": "dict_delete",
    "doc_opcode": "F459",
    "doc_fift": "DICTDEL",
    "doc_stack": "k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": "Deletes `n`-bit key, represented by a _Slice_ `k`, from dictionary `D`. If the key is present, returns the modified dictionary `D'` and the success flag `-1`. Otherwise, returns the original dictionary `D` and `0`."
  },
  {
    "name": "DICTIDEL",
    "alias_of": "",
    "tlb": "#F45A",
    "doc_category": "dict_delete",
    "doc_opcode": "F45A",
    "doc_fift": "DICTIDEL",
    "doc_stack": "i D n - D' ?",
    "doc_gas": "",
    "doc_description": "A version of `DICTDEL` with the key represented by a signed `n`-bit _Integer_ `i`. If `i` does not fit into `n` bits, simply returns `D` `0` (â€œkey not found, dictionary unmodified'')."
  },
  {
    "name": "DICTUDEL",
    "alias_of": "",
    "tlb": "#F45B",
    "doc_category": "dict_delete",
    "doc_opcode": "F45B",
    "doc_fift": "DICTUDEL",
    "doc_stack": "i D n - D' ?",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIDEL`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTDELGET",
    "alias_of": "",
    "tlb": "#F462",
    "doc_category": "dict_delete",
    "doc_opcode": "F462",
    "doc_fift": "DICTDELGET",
    "doc_stack": "k D n - D' x -1 or D 0",
    "doc_gas": "",
    "doc_description": "Deletes `n`-bit key, represented by a _Slice_ `k`, from dictionary `D`. If the key is present, returns the modified dictionary `D'`, the original value `x` associated with the key `k` (represented by a _Slice_), and the success flag `-1`. Otherwise, returns the original dictionary `D` and `0`."
  },
  {
    "name": "DICTDELGETREF",
    "alias_of": "",
    "tlb": "#F463",
    "doc_category": "dict_delete",
    "doc_opcode": "F463",
    "doc_fift": "DICTDELGETREF",
    "doc_stack": "k D n - D' c -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTDELGET`, but with `LDREF` `ENDS` applied to `x` on success, so that the value returned `c` is a _Cell_."
  },
  {
    "name": "DICTIDELGET",
    "alias_of": "",
    "tlb": "#F464",
    "doc_category": "dict_delete",
    "doc_opcode": "F464",
    "doc_fift": "DICTIDELGET",
    "doc_stack": "i D n - D' x -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTDELGET`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTIDELGETREF",
    "alias_of": "",
    "tlb": "#F465",
    "doc_category": "dict_delete",
    "doc_opcode": "F465",
    "doc_fift": "DICTIDELGETREF",
    "doc_stack": "i D n - D' c -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTDELGETREF`, but with `i` a signed `n`-bit integer."
  },
  {
    "name": "DICTUDELGET",
    "alias_of": "",
    "tlb": "#F466",
    "doc_category": "dict_delete",
    "doc_opcode": "F466",
    "doc_fift": "DICTUDELGET",
    "doc_stack": "i D n - D' x -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTDELGET`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTUDELGETREF",
    "alias_of": "",
    "tlb": "#F467",
    "doc_category": "dict_delete",
    "doc_opcode": "F467",
    "doc_fift": "DICTUDELGETREF",
    "doc_stack": "i D n - D' c -1 or D 0",
    "doc_gas": "",
    "doc_description": "`DICTDELGETREF`, but with `i` an unsigned `n`-bit integer."
  },
  {
    "name": "DICTGETOPTREF",
    "alias_of": "",
    "tlb": "#F469",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F469",
    "doc_fift": "DICTGETOPTREF",
    "doc_stack": "k D n - c^?",
    "doc_gas": "",
    "doc_description": "A variant of `DICTGETREF` that returns _Null_ instead of the value `c^?` if the key `k` is absent from dictionary `D`."
  },
  {
    "name": "DICTIGETOPTREF",
    "alias_of": "",
    "tlb": "#F46A",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F46A",
    "doc_fift": "DICTIGETOPTREF",
    "doc_stack": "i D n - c^?",
    "doc_gas": "",
    "doc_description": "`DICTGETOPTREF`, but with `i` a signed `n`-bit integer. If the key `i` is out of range, also returns _Null_."
  },
  {
    "name": "DICTUGETOPTREF",
    "alias_of": "",
    "tlb": "#F46B",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F46B",
    "doc_fift": "DICTUGETOPTREF",
    "doc_stack": "i D n - c^?",
    "doc_gas": "",
    "doc_description": "`DICTGETOPTREF`, but with `i` an unsigned `n`-bit integer. If the key `i` is out of range, also returns _Null_."
  },
  {
    "name": "DICTSETGETOPTREF",
    "alias_of": "",
    "tlb": "#F46D",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F46D",
    "doc_fift": "DICTSETGETOPTREF",
    "doc_stack": "c^? k D n - D' ~c^?",
    "doc_gas": "",
    "doc_description": "A variant of both `DICTGETOPTREF` and `DICTSETGETREF` that sets the value corresponding to key `k` in dictionary `D` to `c^?` (if `c^?` is _Null_, then the key is deleted instead), and returns the old value `~c^?` (if the key `k` was absent before, returns _Null_ instead)."
  },
  {
    "name": "DICTISETGETOPTREF",
    "alias_of": "",
    "tlb": "#F46E",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F46E",
    "doc_fift": "DICTISETGETOPTREF",
    "doc_stack": "c^? i D n - D' ~c^?",
    "doc_gas": "",
    "doc_description": "Similar to primitive `DICTSETGETOPTREF`, but using signed `n`-bit _Integer_ `i` as a key. If `i` does not fit into `n` bits, throws a range checking exception."
  },
  {
    "name": "DICTUSETGETOPTREF",
    "alias_of": "",
    "tlb": "#F46F",
    "doc_category": "dict_mayberef",
    "doc_opcode": "F46F",
    "doc_fift": "DICTUSETGETOPTREF",
    "doc_stack": "c^? i D n - D' ~c^?",
    "doc_gas": "",
    "doc_description": "Similar to primitive `DICTSETGETOPTREF`, but using unsigned `n`-bit _Integer_ `i` as a key."
  },
  {
    "name": "PFXDICTSET",
    "alias_of": "",
    "tlb": "#F470",
    "doc_category": "dict_prefix",
    "doc_opcode": "F470",
    "doc_fift": "PFXDICTSET",
    "doc_stack": "x k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "PFXDICTREPLACE",
    "alias_of": "",
    "tlb": "#F471",
    "doc_category": "dict_prefix",
    "doc_opcode": "F471",
    "doc_fift": "PFXDICTREPLACE",
    "doc_stack": "x k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "PFXDICTADD",
    "alias_of": "",
    "tlb": "#F472",
    "doc_category": "dict_prefix",
    "doc_opcode": "F472",
    "doc_fift": "PFXDICTADD",
    "doc_stack": "x k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "PFXDICTDEL",
    "alias_of": "",
    "tlb": "#F473",
    "doc_category": "dict_prefix",
    "doc_opcode": "F473",
    "doc_fift": "PFXDICTDEL",
    "doc_stack": "k D n - D' -1 or D 0",
    "doc_gas": "",
    "doc_description": ""
  },
  {
    "name": "DICTGETNEXT",
    "alias_of": "",
    "tlb": "#F474",
    "doc_category": "dict_next",
    "doc_opcode": "F474",
    "doc_fift": "DICTGETNEXT",
    "doc_stack": "k D n - x' k' -1 or 0",
    "doc_gas": "",
    "doc_description": "Computes the minimal key `k'` in dictionary `D` that is lexicographically greater than `k`, and returns `k'` (represented by a _Slice_) along with associated value `x'` (also represented by a _Slice_)."
  },
  {
    "name": "DICTGETNEXTEQ",
    "alias_of": "",
    "tlb": "#F475",
    "doc_category": "dict_next",
    "doc_opcode": "F475",
    "doc_fift": "DICTGETNEXTEQ",
    "doc_stack": "k D n - x' k' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXT`, but computes the minimal key `k'` that is lexicographically greater than or equal to `k`."
  },
  {
    "name": "DICTGETPREV",
    "alias_of": "",
    "tlb": "#F476",
    "doc_category": "dict_next",
    "doc_opcode": "F476",
    "doc_fift": "DICTGETPREV",
    "doc_stack": "k D n - x' k' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXT`, but computes the maximal key `k'` lexicographically smaller than `k`."
  },
  {
    "name": "DICTGETPREVEQ",
    "alias_of": "",
    "tlb": "#F477",
    "doc_category": "dict_next",
    "doc_opcode": "F477",
    "doc_fift": "DICTGETPREVEQ",
    "doc_stack": "k D n - x' k' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETPREV`, but computes the maximal key `k'` lexicographically smaller than or equal to `k`."
  },
  {
    "name": "DICTIGETNEXT",
    "alias_of": "",
    "tlb": "#F478",
    "doc_category": "dict_next",
    "doc_opcode": "F478",
    "doc_fift": "DICTIGETNEXT",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXT`, but interprets all keys in dictionary `D` as big-endian signed `n`-bit integers, and computes the minimal key `i'` that is larger than _Integer_ `i` (which does not necessarily fit into `n` bits)."
  },
  {
    "name": "DICTIGETNEXTEQ",
    "alias_of": "",
    "tlb": "#F479",
    "doc_category": "dict_next",
    "doc_opcode": "F479",
    "doc_fift": "DICTIGETNEXTEQ",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXTEQ`, but interprets keys as signed `n`-bit integers."
  },
  {
    "name": "DICTIGETPREV",
    "alias_of": "",
    "tlb": "#F47A",
    "doc_category": "dict_next",
    "doc_opcode": "F47A",
    "doc_fift": "DICTIGETPREV",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETPREV`, but interprets keys as signed `n`-bit integers."
  },
  {
    "name": "DICTIGETPREVEQ",
    "alias_of": "",
    "tlb": "#F47B",
    "doc_category": "dict_next",
    "doc_opcode": "F47B",
    "doc_fift": "DICTIGETPREVEQ",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETPREVEQ`, but interprets keys as signed `n`-bit integers."
  },
  {
    "name": "DICTUGETNEXT",
    "alias_of": "",
    "tlb": "#F47C",
    "doc_category": "dict_next",
    "doc_opcode": "F47C",
    "doc_fift": "DICTUGETNEXT",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXT`, but interprets all keys in dictionary `D` as big-endian unsigned `n`-bit integers, and computes the minimal key `i'` that is larger than _Integer_ `i` (which does not necessarily fit into `n` bits, and is not necessarily non-negative)."
  },
  {
    "name": "DICTUGETNEXTEQ",
    "alias_of": "",
    "tlb": "#F47D",
    "doc_category": "dict_next",
    "doc_opcode": "F47D",
    "doc_fift": "DICTUGETNEXTEQ",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETNEXTEQ`, but interprets keys as unsigned `n`-bit integers."
  },
  {
    "name": "DICTUGETPREV",
    "alias_of": "",
    "tlb": "#F47E",
    "doc_category": "dict_next",
    "doc_opcode": "F47E",
    "doc_fift": "DICTUGETPREV",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETPREV`, but interprets keys as unsigned `n`-bit integers."
  },
  {
    "name": "DICTUGETPREVEQ",
    "alias_of": "",
    "tlb": "#F47F",
    "doc_category": "dict_next",
    "doc_opcode": "F47F",
    "doc_fift": "DICTUGETPREVEQ",
    "doc_stack": "i D n - x' i' -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTGETPREVEQ`, but interprets keys a unsigned `n`-bit integers."
  },
  {
    "name": "DICTMIN",
    "alias_of": "",
    "tlb": "#F482",
    "doc_category": "dict_min",
    "doc_opcode": "F482",
    "doc_fift": "DICTMIN",
    "doc_stack": "D n - x k -1 or 0",
    "doc_gas": "",
    "doc_description": "Computes the minimal key `k` (represented by a _Slice_ with `n` data bits) in dictionary `D`, and returns `k` along with the associated value `x`."
  },
  {
    "name": "DICTMINREF",
    "alias_of": "",
    "tlb": "#F483",
    "doc_category": "dict_min",
    "doc_opcode": "F483",
    "doc_fift": "DICTMINREF",
    "doc_stack": "D n - c k -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMIN`, but returns the only reference in the value as a _Cell_ `c`."
  },
  {
    "name": "DICTIMIN",
    "alias_of": "",
    "tlb": "#F484",
    "doc_category": "dict_min",
    "doc_opcode": "F484",
    "doc_fift": "DICTIMIN",
    "doc_stack": "D n - x i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMIN`, but computes the minimal key `i` under the assumption that all keys are big-endian signed `n`-bit integers. Notice that the key and value returned may differ from those computed by `DICTMIN` and `DICTUMIN`."
  },
  {
    "name": "DICTIMINREF",
    "alias_of": "",
    "tlb": "#F485",
    "doc_category": "dict_min",
    "doc_opcode": "F485",
    "doc_fift": "DICTIMINREF",
    "doc_stack": "D n - c i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIMIN`, but returns the only reference in the value."
  },
  {
    "name": "DICTUMIN",
    "alias_of": "",
    "tlb": "#F486",
    "doc_category": "dict_min",
    "doc_opcode": "F486",
    "doc_fift": "DICTUMIN",
    "doc_stack": "D n - x i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMIN`, but returns the key as an unsigned `n`-bit _Integer_ `i`."
  },
  {
    "name": "DICTUMINREF",
    "alias_of": "",
    "tlb": "#F487",
    "doc_category": "dict_min",
    "doc_opcode": "F487",
    "doc_fift": "DICTUMINREF",
    "doc_stack": "D n - c i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTUMIN`, but returns the only reference in the value."
  },
  {
    "name": "DICTMAX",
    "alias_of": "",
    "tlb": "#F48A",
    "doc_category": "dict_min",
    "doc_opcode": "F48A",
    "doc_fift": "DICTMAX",
    "doc_stack": "D n - x k -1 or 0",
    "doc_gas": "",
    "doc_description": "Computes the maximal key `k` (represented by a _Slice_ with `n` data bits) in dictionary `D`, and returns `k` along with the associated value `x`."
  },
  {
    "name": "DICTMAXREF",
    "alias_of": "",
    "tlb": "#F48B",
    "doc_category": "dict_min",
    "doc_opcode": "F48B",
    "doc_fift": "DICTMAXREF",
    "doc_stack": "D n - c k -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMAX`, but returns the only reference in the value."
  },
  {
    "name": "DICTIMAX",
    "alias_of": "",
    "tlb": "#F48C",
    "doc_category": "dict_min",
    "doc_opcode": "F48C",
    "doc_fift": "DICTIMAX",
    "doc_stack": "D n - x i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMAX`, but computes the maximal key `i` under the assumption that all keys are big-endian signed `n`-bit integers. Notice that the key and value returned may differ from those computed by `DICTMAX` and `DICTUMAX`."
  },
  {
    "name": "DICTIMAXREF",
    "alias_of": "",
    "tlb": "#F48D",
    "doc_category": "dict_min",
    "doc_opcode": "F48D",
    "doc_fift": "DICTIMAXREF",
    "doc_stack": "D n - c i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIMAX`, but returns the only reference in the value."
  },
  {
    "name": "DICTUMAX",
    "alias_of": "",
    "tlb": "#F48E",
    "doc_category": "dict_min",
    "doc_opcode": "F48E",
    "doc_fift": "DICTUMAX",
    "doc_stack": "D n - x i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTMAX`, but returns the key as an unsigned `n`-bit _Integer_ `i`."
  },
  {
    "name": "DICTUMAXREF",
    "alias_of": "",
    "tlb": "#F48F",
    "doc_category": "dict_min",
    "doc_opcode": "F48F",
    "doc_fift": "DICTUMAXREF",
    "doc_stack": "D n - c i -1 or 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTUMAX`, but returns the only reference in the value."
  },
  {
    "name": "DICTREMMIN",
    "alias_of": "",
    "tlb": "#F492",
    "doc_category": "dict_min",
    "doc_opcode": "F492",
    "doc_fift": "DICTREMMIN",
    "doc_stack": "D n - D' x k -1 or D 0",
    "doc_gas": "",
    "doc_description": "Computes the minimal key `k` (represented by a _Slice_ with `n` data bits) in dictionary `D`, removes `k` from the dictionary, and returns `k` along with the associated value `x` and the modified dictionary `D'`."
  },
  {
    "name": "DICTREMMINREF",
    "alias_of": "",
    "tlb": "#F493",
    "doc_category": "dict_min",
    "doc_opcode": "F493",
    "doc_fift": "DICTREMMINREF",
    "doc_stack": "D n - D' c k -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMIN`, but returns the only reference in the value as a _Cell_ `c`."
  },
  {
    "name": "DICTIREMMIN",
    "alias_of": "",
    "tlb": "#F494",
    "doc_category": "dict_min",
    "doc_opcode": "F494",
    "doc_fift": "DICTIREMMIN",
    "doc_stack": "D n - D' x i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMIN`, but computes the minimal key `i` under the assumption that all keys are big-endian signed `n`-bit integers. Notice that the key and value returned may differ from those computed by `DICTREMMIN` and `DICTUREMMIN`."
  },
  {
    "name": "DICTIREMMINREF",
    "alias_of": "",
    "tlb": "#F495",
    "doc_category": "dict_min",
    "doc_opcode": "F495",
    "doc_fift": "DICTIREMMINREF",
    "doc_stack": "D n - D' c i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIREMMIN`, but returns the only reference in the value."
  },
  {
    "name": "DICTUREMMIN",
    "alias_of": "",
    "tlb": "#F496",
    "doc_category": "dict_min",
    "doc_opcode": "F496",
    "doc_fift": "DICTUREMMIN",
    "doc_stack": "D n - D' x i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMIN`, but returns the key as an unsigned `n`-bit _Integer_ `i`."
  },
  {
    "name": "DICTUREMMINREF",
    "alias_of": "",
    "tlb": "#F497",
    "doc_category": "dict_min",
    "doc_opcode": "F497",
    "doc_fift": "DICTUREMMINREF",
    "doc_stack": "D n - D' c i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTUREMMIN`, but returns the only reference in the value."
  },
  {
    "name": "DICTREMMAX",
    "alias_of": "",
    "tlb": "#F49A",
    "doc_category": "dict_min",
    "doc_opcode": "F49A",
    "doc_fift": "DICTREMMAX",
    "doc_stack": "D n - D' x k -1 or D 0",
    "doc_gas": "",
    "doc_description": "Computes the maximal key `k` (represented by a _Slice_ with `n` data bits) in dictionary `D`, removes `k` from the dictionary, and returns `k` along with the associated value `x` and the modified dictionary `D'`."
  },
  {
    "name": "DICTREMMAXREF",
    "alias_of": "",
    "tlb": "#F49B",
    "doc_category": "dict_min",
    "doc_opcode": "F49B",
    "doc_fift": "DICTREMMAXREF",
    "doc_stack": "D n - D' c k -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMAX`, but returns the only reference in the value as a _Cell_ `c`."
  },
  {
    "name": "DICTIREMMAX",
    "alias_of": "",
    "tlb": "#F49C",
    "doc_category": "dict_min",
    "doc_opcode": "F49C",
    "doc_fift": "DICTIREMMAX",
    "doc_stack": "D n - D' x i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMAX`, but computes the minimal key `i` under the assumption that all keys are big-endian signed `n`-bit integers. Notice that the key and value returned may differ from those computed by `DICTREMMAX` and `DICTUREMMAX`."
  },
  {
    "name": "DICTIREMMAXREF",
    "alias_of": "",
    "tlb": "#F49D",
    "doc_category": "dict_min",
    "doc_opcode": "F49D",
    "doc_fift": "DICTIREMMAXREF",
    "doc_stack": "D n - D' c i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIREMMAX`, but returns the only reference in the value."
  },
  {
    "name": "DICTUREMMAX",
    "alias_of": "",
    "tlb": "#F49E",
    "doc_category": "dict_min",
    "doc_opcode": "F49E",
    "doc_fift": "DICTUREMMAX",
    "doc_stack": "D n - D' x i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTREMMAX`, but returns the key as an unsigned `n`-bit _Integer_ `i`."
  },
  {
    "name": "DICTUREMMAXREF",
    "alias_of": "",
    "tlb": "#F49F",
    "doc_category": "dict_min",
    "doc_opcode": "F49F",
    "doc_fift": "DICTUREMMAXREF",
    "doc_stack": "D n - D' c i -1 or D 0",
    "doc_gas": "",
    "doc_description": "Similar to `DICTUREMMAX`, but returns the only reference in the value."
  },
  {
    "name": "DICTIGETJMP",
    "alias_of": "",
    "tlb": "#F4A0",
    "doc_category": "dict_special",
    "doc_opcode": "F4A0",
    "doc_fift": "DICTIGETJMP",
    "doc_stack": "i D n -",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIGET`, but with `x` `BLESS`ed into a continuation with a subsequent `JMPX` to it on success. On failure, does nothing. This is useful for implementing `switch`/`case` constructions."
  },
  {
    "name": "DICTUGETJMP",
    "alias_of": "",
    "tlb": "#F4A1",
    "doc_category": "dict_special",
    "doc_opcode": "F4A1",
    "doc_fift": "DICTUGETJMP",
    "doc_stack": "i D n -",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIGETJMP`, but performs `DICTUGET` instead of `DICTIGET`."
  },
  {
    "name": "DICTIGETEXEC",
    "alias_of": "",
    "tlb": "#F4A2",
    "doc_category": "dict_special",
    "doc_opcode": "F4A2",
    "doc_fift": "DICTIGETEXEC",
    "doc_stack": "i D n -",
    "doc_gas": "",
    "doc_description": "Similar to `DICTIGETJMP`, but with `EXECUTE` instead of `JMPX`."
  },
  {
    "name": "DICTUGETEXEC",
    "alias_of": "",
    "tlb": "#F4A3",
    "doc_category": "dict_special",
    "doc_opcode": "F4A3",
    "doc_fift": "DICTUGETEXEC",
    "doc_stack": "i D n -",
    "doc_gas": "",
    "doc_description": "Similar to `DICTUGETJMP`, but with `EXECUTE` instead of `JMPX`."
  },
  {
    "name": "DICTPUSHCONST",
    "alias_of": "",
    "tlb": "#F4A6_ d:^Cell n:uint10",
    "doc_category": "dict_special",
    "doc_opcode": "F4A6_n",
    "doc_fift": "[ref] [n] DICTPUSHCONST",
    "doc_stack": "- D n",
    "doc_gas": 34,
    "doc_description": "Pushes a non-empty constant dictionary `D` (as a `Cell^?`) along with its key length `0 <= n <= 1023`, stored as a part of the instruction. The dictionary itself is created from the first of remaining references of the current continuation. In this way, the complete `DICTPUSHCONST` instruction can be obtained by first serializing `xF4A4_`, then the non-empty dictionary itself (one `1` bit and a cell reference), and then the unsigned 10-bit integer `n` (as if by a `STU 10` instruction). An empty dictionary can be pushed by a `NEWDICT` primitive instead."
  },
  {
    "name": "PFXDICTGETQ",
    "alias_of": "",
    "tlb": "#F4A8",
    "doc_category": "dict_special",
    "doc_opcode": "F4A8",
    "doc_fift": "PFXDICTGETQ",
    "doc_stack": "s D n - s' x s'' -1 or s 0",
    "doc_gas": "",
    "doc_description": "Looks up the unique prefix of _Slice_ `s` present in the prefix code dictionary represented by `Cell^?` `D` and `0 <= n <= 1023`. If found, the prefix of `s` is returned as `s'`, and the corresponding value (also a _Slice_) as `x`. The remainder of `s` is returned as a _Slice_ `s''`. If no prefix of `s` is a key in prefix code dictionary `D`, returns the unchanged `s` and a zero flag to indicate failure."
  },
  {
    "name": "PFXDICTGET",
    "alias_of": "",
    "tlb": "#F4A9",
    "doc_category": "dict_special",
    "doc_opcode": "F4A9",
    "doc_fift": "PFXDICTGET",
    "doc_stack": "s D n - s' x s''",
    "doc_gas": "",
    "doc_description": "Similar to `PFXDICTGET`, but throws a cell deserialization failure exception on failure."
  },
  {
    "name": "PFXDICTGETJMP",
    "alias_of": "",
    "tlb": "#F4AA",
    "doc_category": "dict_special",
    "doc_opcode": "F4AA",
    "doc_fift": "PFXDICTGETJMP",
    "doc_stack": "s D n - s' s'' or s",
    "doc_gas": "",
    "doc_description": "Similar to `PFXDICTGETQ`, but on success `BLESS`es the value `x` into a _Continuation_ and transfers control to it as if by a `JMPX`. On failure, returns `s` unchanged and continues execution."
  },
  {
    "name": "PFXDICTGETEXEC",
    "alias_of": "",
    "tlb": "#F4AB",
    "doc_category": "dict_special",
    "doc_opcode": "F4AB",
    "doc_fift": "PFXDICTGETEXEC",
    "doc_stack": "s D n - s' s''",
    "doc_gas": "",
    "doc_description": "Similar to `PFXDICTGETJMP`, but `EXEC`utes the continuation found instead of jumping to it. On failure, throws a cell deserialization exception."
  },
  {
    "name": "PFXDICTCONSTGETJMP",
    "alias_of": "",
    "tlb": "#F4AE_ d:^Cell n:uint10",
    "doc_category": "dict_special",
    "doc_opcode": "F4AE_n",
    "doc_fift": "[ref] [n] PFXDICTCONSTGETJMP\n[ref] [n] PFXDICTSWITCH",
    "doc_stack": "s - s' s'' or s",
    "doc_gas": "",
    "doc_description": "Combines `[n] DICTPUSHCONST` for `0 <= n <= 1023` with `PFXDICTGETJMP`."
  },
  {
    "name": "DICTIGETJMPZ",
    "alias_of": "",
    "tlb": "#F4BC",
    "doc_category": "dict_special",
    "doc_opcode": "F4BC",
    "doc_fift": "DICTIGETJMPZ",
    "doc_stack": "i D n - i or nothing",
    "doc_gas": "",
    "doc_description": "A variant of `DICTIGETJMP` that returns index `i` on failure."
  },
  {
    "name": "DICTUGETJMPZ",
    "alias_of": "",
    "tlb": "#F4BD",
    "doc_category": "dict_special",
    "doc_opcode": "F4BD",
    "doc_fift": "DICTUGETJMPZ",
    "doc_stack": "i D n - i or nothing",
    "doc_gas": "",
    "doc_description": "A variant of `DICTUGETJMP` that returns index `i` on failure."
  },
  {
    "name": "DICTIGETEXECZ",
    "alias_of": "",
    "tlb": "#F4BE",
    "doc_category": "dict_special",
    "doc_opcode": "F4BE",
    "doc_fift": "DICTIGETEXECZ",
    "doc_stack": "i D n - i or nothing",
    "doc_gas": "",
    "doc_description": "A variant of `DICTIGETEXEC` that returns index `i` on failure."
  },
  {
    "name": "DICTUGETEXECZ",
    "alias_of": "",
    "tlb": "#F4BF",
    "doc_category": "dict_special",
    "doc_opcode": "F4BF",
    "doc_fift": "DICTUGETEXECZ",
    "doc_stack": "i D n - i or nothing",
    "doc_gas": "",
    "doc_description": "A variant of `DICTUGETEXEC` that returns index `i` on failure."
  },
  {
    "name": "SUBDICTGET",
    "alias_of": "",
    "tlb": "#F4B1",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B1",
    "doc_fift": "SUBDICTGET",
    "doc_stack": "k l D n - D'",
    "doc_gas": "",
    "doc_description": "Constructs a subdictionary consisting of all keys beginning with prefix `k` (represented by a _Slice_, the first `0 <= l <= n <= 1023` data bits of which are used as a key) of length `l` in dictionary `D` of type `HashmapE(n,X)` with `n`-bit keys. On success, returns the new subdictionary of the same type `HashmapE(n,X)` as a _Slice_ `D'`."
  },
  {
    "name": "SUBDICTIGET",
    "alias_of": "",
    "tlb": "#F4B2",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B2",
    "doc_fift": "SUBDICTIGET",
    "doc_stack": "x l D n - D'",
    "doc_gas": "",
    "doc_description": "Variant of `SUBDICTGET` with the prefix represented by a signed big-endian `l`-bit _Integer_ `x`, where necessarily `l <= 257`."
  },
  {
    "name": "SUBDICTUGET",
    "alias_of": "",
    "tlb": "#F4B3",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B3",
    "doc_fift": "SUBDICTUGET",
    "doc_stack": "x l D n - D'",
    "doc_gas": "",
    "doc_description": "Variant of `SUBDICTGET` with the prefix represented by an unsigned big-endian `l`-bit _Integer_ `x`, where necessarily `l <= 256`."
  },
  {
    "name": "SUBDICTRPGET",
    "alias_of": "",
    "tlb": "#F4B5",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B5",
    "doc_fift": "SUBDICTRPGET",
    "doc_stack": "k l D n - D'",
    "doc_gas": "",
    "doc_description": "Similar to `SUBDICTGET`, but removes the common prefix `k` from all keys of the new dictionary `D'`, which becomes of type `HashmapE(n-l,X)`."
  },
  {
    "name": "SUBDICTIRPGET",
    "alias_of": "",
    "tlb": "#F4B6",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B6",
    "doc_fift": "SUBDICTIRPGET",
    "doc_stack": "x l D n - D'",
    "doc_gas": "",
    "doc_description": "Variant of `SUBDICTRPGET` with the prefix represented by a signed big-endian `l`-bit _Integer_ `x`, where necessarily `l <= 257`."
  },
  {
    "name": "SUBDICTURPGET",
    "alias_of": "",
    "tlb": "#F4B7",
    "doc_category": "dict_sub",
    "doc_opcode": "F4B7",
    "doc_fift": "SUBDICTURPGET",
    "doc_stack": "x l D n - D'",
    "doc_gas": "",
    "doc_description": "Variant of `SUBDICTRPGET` with the prefix represented by an unsigned big-endian `l`-bit _Integer_ `x`, where necessarily `l <= 256`."
  }
]
